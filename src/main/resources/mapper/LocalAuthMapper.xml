<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zx.learn.dao.LocalAuthMapper">
  <resultMap id="BaseResultMap" type="org.zx.learn.model.LocalAuth">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_pwd" jdbcType="VARCHAR" property="accountPwd" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.zx.learn.model.LocalAuth">
    <result column="sys_role" jdbcType="LONGVARCHAR" property="sysRole" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, account_name, account_pwd, account_status
  </sql>
  <sql id="Blob_Column_List">
    sys_role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from local_auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from local_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.zx.learn.model.LocalAuth">
    insert into local_auth (id, user_id, account_name, 
      account_pwd, account_status, sys_role
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{accountName,jdbcType=VARCHAR}, 
      #{accountPwd,jdbcType=VARCHAR}, #{accountStatus,jdbcType=INTEGER}, #{sysRole,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.zx.learn.model.LocalAuth">
    insert into local_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountPwd != null">
        account_pwd,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="sysRole != null">
        sys_role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPwd != null">
        #{accountPwd,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="sysRole != null">
        #{sysRole,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.zx.learn.model.LocalAuth">
    update local_auth
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPwd != null">
        account_pwd = #{accountPwd,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="sysRole != null">
        sys_role = #{sysRole,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.zx.learn.model.LocalAuth">
    update local_auth
    set user_id = #{userId,jdbcType=INTEGER},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_pwd = #{accountPwd,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=INTEGER},
      sys_role = #{sysRole,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zx.learn.model.LocalAuth">
    update local_auth
    set user_id = #{userId,jdbcType=INTEGER},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_pwd = #{accountPwd,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAuthByAccountName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from local_auth
    where account_name = #{0}
  </select>
</mapper>